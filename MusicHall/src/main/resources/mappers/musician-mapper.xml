<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "org/apache/ibatis/builder/xml/mybatis-3-mapper.dtd">
<mapper namespace="com.solvd.musichall.dao.IMusicianDAO">
    <sql id="body">
        m.idMusician as musician_id,
        m.role as musician_role,
        p.idPerson as musician_idPerson,
        p.name as musician_name,
        p.lastname as musician_lastname,
        p.age as musician_age
    </sql>
    <select id="getMusiciansByBandId" resultMap="musicianResultMap">
        SELECT
        <include refid="body"/>
        FROM musician as m inner join person as p on m.Person_idPerson = p.idPerson
        where m.Bands_idBands = ${id}
    </select>
    <select id="getAll" resultMap="musicianResultMap">
        SELECT
        <include refid="body"/>
        FROM musician as m inner join person as p on m.Person_idPerson = p.idPerson
    </select>
    <select id="getByID" resultMap="musicianResultMap">
        SELECT
        <include refid="body"/>
        FROM musician as m inner join person as p on m.Person_idPerson = p.idPerson
        where m.idMusician = ${id}
    </select>
    <insert id="create" useGeneratedKeys="true" keyProperty="personId"
            parameterType="com.solvd.musichall.models.people.Musician">
        INSERT INTO musician (Person_idPerson, role)
        VALUES (#{personId}, #{role})
    </insert>
    <update id="update"
            parameterType="com.solvd.musichall.models.people.Musician">
        UPDATE musician SET
        role= #{role},
        Person_idPerson = #{personId} where idMusician = #{musicianID}
    </update>
    <delete id="deleteByID">
        Delete from musician where idMusician =${id}
    </delete>
    <resultMap id="musicianResultMap" type="com.solvd.musichall.models.people.Musician" autoMapping="false">
        <id column="musician_id" property="musicianID"/>
        <result column="musician_role" property="role"/>
        <result column="musician_idPerson" property="personId"/>
        <result column="musician_name" property="name"/>
        <result column="musician_lastname" property="lastname"/>
        <result column="musician_age" property="age"/>
    </resultMap>
</mapper>